[gd_scene load_steps=7 format=3 uid="uid://dj4cqaqhhkqus"]

[ext_resource type="Theme" uid="uid://dmce53ilrrlem" path="res://main-theme.tres" id="1_ak752"]

[sub_resource type="GDScript" id="GDScript_4f068"]
resource_name = "main"
script/source = "extends Control

signal start_button_pressed(chosen_ability:GameAbilitiesNamespace.Types)


func _on_ability_list_start_button_pressed(ability_chosen: GameAbilitiesNamespace.Types) -> void:
	start_button_pressed.emit(ability_chosen)
"

[sub_resource type="LabelSettings" id="LabelSettings_5ioai"]
font_size = 50

[sub_resource type="GDScript" id="GDScript_qi165"]
resource_name = "ability_list"
script/source = "extends HBoxContainer

signal start_button_pressed(ability_chosen:GameAbilitiesNamespace.Types)

var _focused_ability : int = -1
var _selected_ability : int = -1
var _is_selecting_ability : bool = true

func _ready() -> void:
	var i : int = 1
	for ability_info:AbilityInfo in AbilitiesListDBNamespace.AVAILIBLE_ABILITIES:
		var entry : AbilityListEntry = GameAbilitiesNamespace.ABILITY_UI_ENTRY_SCENE.instantiate()
		
		entry.build(ability_info.ability_name, i, 
			ability_info.ability_texture if ability_info.ability_texture else GameAbilitiesNamespace.ABILITY_FALLBACK_ICON)
		entry.ability_info = ability_info
		add_child(entry)
		i += 1


func _input(event: InputEvent) -> void:
	if get_child_count() == 0:
		return
	
	if event.is_action_pressed(\"ability_selecting_next\") and _is_selecting_ability:
		if _focused_ability == -1:
			_focused_ability = 0
		else:
			_focused_ability = (_focused_ability+1)%get_child_count()
		get_children().map(func(v:AbilityListEntry): v.set_mark_as_selecting(false))
		(get_child(_focused_ability) as AbilityListEntry).set_mark_as_selecting(true)
		(%DescriptionLabel as Label).text = (get_child(_focused_ability) as AbilityListEntry).ability_info.description
	
	if event.is_action_pressed(\"ability_selecting_prev\") and _is_selecting_ability:
		if _focused_ability == -1:
			_focused_ability = 0
		else:
			_focused_ability = ((_focused_ability-1) + get_child_count()) % get_child_count()
		get_children().map(func(v:AbilityListEntry): v.set_mark_as_selecting(false))
		(get_child(_focused_ability) as AbilityListEntry).set_mark_as_selecting(true)
		(%DescriptionLabel as Label).text = (get_child(_focused_ability) as AbilityListEntry).ability_info.description
	
	if event.is_action_pressed(\"platform_launch_ball\") and _is_selecting_ability:
		if _focused_ability != -1:
			get_children().map(func(v:AbilityListEntry): v.set_mark_as_selected(false))
			(get_child(_focused_ability) as AbilityListEntry).set_mark_as_selected(true)
			_selected_ability = _focused_ability
			(%StartButton as Button).disabled = false
	
	if event.is_action_pressed(\"ability_selecting_down\"):
		(%StartButton as Button).grab_focus()
	
	if event.is_action_pressed(\"ability_selecting_up\"):
		(%StartButton as Button).release_focus()


func _on_start_button_focus_entered() -> void:
	_is_selecting_ability = false
	(get_child(_focused_ability) as AbilityListEntry).set_mark_as_selecting(false)
	_focused_ability = -1
	(%DescriptionLabel as Label).text = \"\"


func _on_start_button_focus_exited() -> void:
	_is_selecting_ability = true
	_focused_ability = 0
	(get_child(_focused_ability) as AbilityListEntry).set_mark_as_selecting(true)

func _on_start_button_pressed() -> void:
	if _selected_ability == -1:
		return
	
	start_button_pressed.emit((get_child(_selected_ability) as AbilityListEntry).ability_info.ability_type)
"

[sub_resource type="LabelSettings" id="LabelSettings_e75fn"]
font_size = 20

[sub_resource type="GDScript" id="GDScript_27bs7"]
resource_name = "start_button"
script/source = "extends Button



func _on_focus_entered() -> void:
	($FocusIndicator as CanvasItem).show()


func _on_focus_exited() -> void:
	($FocusIndicator as CanvasItem).hide()
"

[node name="GameStartingUI" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme = ExtResource("1_ak752")
script = SubResource("GDScript_4f068")

[node name="ColorRect" type="ColorRect" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0, 0, 0, 0.784314)

[node name="VBoxContainer" type="VBoxContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/separation = 50
alignment = 1

[node name="ChooseAbilityLabel" type="Label" parent="VBoxContainer"]
layout_mode = 2
text = "Choose boosting ability"
label_settings = SubResource("LabelSettings_5ioai")
horizontal_alignment = 1

[node name="AbilityList" type="HBoxContainer" parent="VBoxContainer"]
show_behind_parent = true
layout_mode = 2
theme_override_constants/separation = 20
alignment = 1
script = SubResource("GDScript_qi165")

[node name="DescriptionLabel" type="Label" parent="VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
text = "    "
label_settings = SubResource("LabelSettings_e75fn")
horizontal_alignment = 1

[node name="StartButton" type="Button" parent="VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 4
theme_override_font_sizes/font_size = 50
disabled = true
text = "   Start   "
script = SubResource("GDScript_27bs7")

[node name="FocusIndicator" type="MarginContainer" parent="VBoxContainer/StartButton"]
visible = false
layout_mode = 1
anchors_preset = -1
anchor_right = 0.113
anchor_bottom = 1.0
offset_right = 0.0319977
grow_vertical = 2
theme_override_constants/margin_left = 7
theme_override_constants/margin_top = 7
theme_override_constants/margin_right = 7
theme_override_constants/margin_bottom = 7

[node name="ColorRect" type="ColorRect" parent="VBoxContainer/StartButton/FocusIndicator"]
layout_mode = 2

[connection signal="gui_input" from="VBoxContainer/AbilityList" to="VBoxContainer/AbilityList" method="_on_gui_input"]
[connection signal="start_button_pressed" from="VBoxContainer/AbilityList" to="." method="_on_ability_list_start_button_pressed"]
[connection signal="focus_entered" from="VBoxContainer/StartButton" to="VBoxContainer/StartButton" method="_on_focus_entered"]
[connection signal="focus_entered" from="VBoxContainer/StartButton" to="VBoxContainer/AbilityList" method="_on_start_button_focus_entered"]
[connection signal="focus_exited" from="VBoxContainer/StartButton" to="VBoxContainer/StartButton" method="_on_focus_exited"]
[connection signal="focus_exited" from="VBoxContainer/StartButton" to="VBoxContainer/AbilityList" method="_on_start_button_focus_exited"]
[connection signal="pressed" from="VBoxContainer/StartButton" to="VBoxContainer/AbilityList" method="_on_start_button_pressed"]
